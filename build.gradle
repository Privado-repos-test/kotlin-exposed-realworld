buildscript {
    ext {
        kotlinVersion = '1.6.10'
        springBootVersion = '2.5.8'
        exposedVersion ='0.37.2'
        postgresVersion = '42.3.1'
        jjwtVersion = '0.9.1'
        jaxbApiVersion = '2.4.0-b180830.0359'
        junitVersion = '5.8.2'
        assertjVersion = '3.22.0'
        mockitoKotlinVersion = '1.6.0'
        javafakerVersion = '1.0.2'
        krushVersion = '0.6.0'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'io.realworld'
version = '0.2.0-SNAPSHOT'
java.sourceCompatibility = JavaVersion.VERSION_11

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}


dependencies {
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-jdbc')
    implementation('org.springframework.data:spring-data-commons')

    implementation("org.jetbrains.exposed:spring-transaction:$exposedVersion")
    implementation('org.flywaydb:flyway-core')
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("io.jsonwebtoken:jjwt:$jjwtVersion")
    implementation("javax.xml.bind:jaxb-api:$jaxbApiVersion")


    implementation("pl.touk.krush:krush-runtime:$krushVersion")
    implementation("pl.touk.krush:krush-annotation-processor:$krushVersion")
    kapt "pl.touk.krush:krush-annotation-processor:$krushVersion"

    runtimeOnly("org.postgresql:postgresql:$postgresVersion")

    testImplementation("org.assertj:assertj-core:$assertjVersion")
    testImplementation("com.nhaarman:mockito-kotlin:$mockitoKotlinVersion")
    testImplementation("com.github.javafaker:javafaker:$javafakerVersion")

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.jupiter', module: 'junit-jupiter'
    }
    testImplementation("org.junit.jupiter:junit-jupiter:$junitVersion")
    testImplementation('org.springframework.security:spring-security-test')
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

bootJar {
    archiveFileName = "${project.name}.jar"
}
